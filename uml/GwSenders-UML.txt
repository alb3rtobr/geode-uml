@startuml
abstract class AbstractGatewaySender {
  - PoolImpl proxy
  + PoolImpl getProxy()
  AbstractGatewaySenderEventProcessor eventProcessor
}

abstract class AbstractGatewaySenderEventProcessor {
  GatewaySenderEventDispatcher dispatcher
}

interface GatewaySenderEventDispatcher

AbstractGatewaySenderEventProcessor <|-- SerialGatewaySenderEventProcessor
SerialGatewaySenderEventProcessor <|-- RemoteSerialGatewaySenderEventProcessor
AbstractGatewaySenderEventProcessor *--- GatewaySenderEventDispatcher

GatewaySenderEventDispatcher <|.. GatewaySenderEventRemoteDispatcher

class GatewaySenderEventRemoteDispatcher {
  - AbstractGatewaySender sender
  - Connection connection
  - AbstractGatewaySenderEventProcessor processor
  - void initializeConnection()
}

interface InternalGatewaySender
interface DistributionAdvisee



AbstractGatewaySender *-- AbstractGatewaySenderEventProcessor
GatewaySenderEventRemoteDispatcher *-- AbstractGatewaySender

class RemoteConcurrentSerialGatewaySenderEventProcessor 
class ConcurrentSerialGatewaySenderEventProcessor{
  AbstractGatewaySender sender
  List<SerialGatewaySenderEventProcessor> processors
}

SerialGatewaySenderEventProcessor --* ConcurrentSerialGatewaySenderEventProcessor

AbstractGatewaySenderEventProcessor <|-- ConcurrentSerialGatewaySenderEventProcessor
ConcurrentSerialGatewaySenderEventProcessor <|-- RemoteConcurrentSerialGatewaySenderEventProcessor




InternalGatewaySender <|.. AbstractGatewaySender
DistributionAdvisee <|.. AbstractGatewaySender


class SerialGatewaySenderImpl
abstract class AbstractRemoteGatewaySender

AbstractGatewaySender <|-- AbstractRemoteGatewaySender
AbstractRemoteGatewaySender <|-- SerialGatewaySenderImpl
class PoolImpl{
  - ConnectionManager manager
  +Connection acquireConnection(ServerLocation loc)
}

class ConnectionManager{
  +Connection borrowConnection(ServerLocation server, boolean onlyUseExistingCnx)
}

AbstractGatewaySender *---- PoolImpl
PoolImpl *-- ConnectionManager

note as N1
  ServerLocation server = this.sender.getServerLocation()
  . . . 
  con = this.sender.getProxy().acquireConnection(server);
  
end note

note as N2
  if dispatcher threads > 1:
    eventProcessor = new RemoteConcurrentSerialGatewaySenderEventProcessor
  else
    eventProcessor = new RemoteSerialGatewaySenderEventProcessor
end note

GatewaySenderEventRemoteDispatcher .. N1

SerialGatewaySenderImpl .. N2
@enduml
